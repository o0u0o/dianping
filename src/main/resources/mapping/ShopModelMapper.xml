<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.o0u0o.dianping.dal.ShopModelMapper">
    <resultMap id="BaseResultMap" type="com.o0u0o.dianping.model.ShopModel">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="remark_score" jdbcType="DECIMAL" property="remarkScore" />
        <result column="price_per_man" jdbcType="INTEGER" property="pricePerMan" />
        <result column="latitude" jdbcType="DECIMAL" property="latitude" />
        <result column="longitude" jdbcType="DECIMAL" property="longitude" />
        <result column="category_id" jdbcType="INTEGER" property="categoryId" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="start_time" jdbcType="VARCHAR" property="startTime" />
        <result column="end_time" jdbcType="VARCHAR" property="endTime" />
        <result column="address" jdbcType="VARCHAR" property="address" />
        <result column="seller_id" jdbcType="INTEGER" property="sellerId" />
        <result column="icon_url" jdbcType="VARCHAR" property="iconUrl" />
        <result column="distance" jdbcType="INTEGER" property="distance" />
    </resultMap>

    <sql id="Base_Column_List">
        id, created_at, updated_at, name, remark_score, price_per_man, latitude, longitude,
        category_id, tags, start_time, end_time, address, seller_id, icon_url
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from shop
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from shop
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.o0u0o.dianping.model.ShopModel">

        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into shop (created_at, updated_at, name,
        remark_score, price_per_man, latitude,
        longitude, category_id, tags,
        start_time, end_time, address,
        seller_id, icon_url)
        values (#{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR},
        #{remarkScore,jdbcType=DECIMAL}, #{pricePerMan,jdbcType=INTEGER}, #{latitude,jdbcType=DECIMAL},
        #{longitude,jdbcType=DECIMAL}, #{categoryId,jdbcType=INTEGER}, #{tags,jdbcType=VARCHAR},
        #{startTime,jdbcType=VARCHAR}, #{endTime,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
        #{sellerId,jdbcType=INTEGER}, #{iconUrl,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.o0u0o.dianping.model.ShopModel">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into shop
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="remarkScore != null">
                remark_score,
            </if>
            <if test="pricePerMan != null">
                price_per_man,
            </if>
            <if test="latitude != null">
                latitude,
            </if>
            <if test="longitude != null">
                longitude,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="startTime != null">
                start_time,
            </if>
            <if test="endTime != null">
                end_time,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="sellerId != null">
                seller_id,
            </if>
            <if test="iconUrl != null">
                icon_url,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="remarkScore != null">
                #{remarkScore,jdbcType=DECIMAL},
            </if>
            <if test="pricePerMan != null">
                #{pricePerMan,jdbcType=INTEGER},
            </if>
            <if test="latitude != null">
                #{latitude,jdbcType=DECIMAL},
            </if>
            <if test="longitude != null">
                #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="sellerId != null">
                #{sellerId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                #{iconUrl,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.o0u0o.dianping.model.ShopModel">
        update shop
        <set>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="remarkScore != null">
                remark_score = #{remarkScore,jdbcType=DECIMAL},
            </if>
            <if test="pricePerMan != null">
                price_per_man = #{pricePerMan,jdbcType=INTEGER},
            </if>
            <if test="latitude != null">
                latitude = #{latitude,jdbcType=DECIMAL},
            </if>
            <if test="longitude != null">
                longitude = #{longitude,jdbcType=DECIMAL},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="sellerId != null">
                seller_id = #{sellerId,jdbcType=INTEGER},
            </if>
            <if test="iconUrl != null">
                icon_url = #{iconUrl,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.o0u0o.dianping.model.ShopModel">
        update shop
        set created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        name = #{name,jdbcType=VARCHAR},
        remark_score = #{remarkScore,jdbcType=DECIMAL},
        price_per_man = #{pricePerMan,jdbcType=INTEGER},
        latitude = #{latitude,jdbcType=DECIMAL},
        longitude = #{longitude,jdbcType=DECIMAL},
        category_id = #{categoryId,jdbcType=INTEGER},
        tags = #{tags,jdbcType=VARCHAR},
        start_time = #{startTime,jdbcType=VARCHAR},
        end_time = #{endTime,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        seller_id = #{sellerId,jdbcType=INTEGER},
        icon_url = #{iconUrl,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectAll" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from shop order by id ASC
    </select>

    <select id="countAllShop"  resultType="java.lang.Integer">
        select
        count(1)
        from shop
    </select>

    <!-- 推荐 推荐 距离因子95%受地理 评分因子5%收评分影响  -->
    <select id="recommend" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List" />,
            ceil(1 + 1000*(2 * 6378.137* ASIN(SQRT(POW(SIN(PI() * (#{latitude} - latitude) / 360), 2) + COS(PI() * #{latitude} / 180) * COS(latitude* PI() / 180) * POW(SIN(PI() * (#{longitude} - longitude) / 360), 2))))) AS distance
        FROM
            shop
        ORDER BY
            (0.95*1/log10(distance)+ 0.05*remark_score/5)  DESC
    </select>

    <!--  门店搜索  -->
    <select id="search" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        ,ceil(1 + 1000*(2 * 6378.137* ASIN(SQRT(POW(SIN(PI() * (#{latitude} - latitude) / 360), 2) + COS(PI() * #{latitude} / 180)
        * COS(latitude* PI() / 180) * POW(SIN(PI() * (#{longitude} - longitude) / 360), 2))))) AS distance
        from shop where name like CONCAT('%',#{keyword},'%')
        <if test="categoryId != null">
            and category_id = #{categoryId}
        </if>
        <if test="orderby == null">
            order by (0.95*1/log10(distance)+ 0.05*remark_score/5)  DESC
        </if>
        <if test="orderby == 1">
            order by price_per_man ASC,id ASC
        </if>
    </select>

    <!--  根据标签分组进行搜索 CONCAT 关键字过滤的匹配  -->
    <select id="searchGroupByTags" resultType="java.util.Map">
        select tags,count(1) as num from shop where name like CONCAT('%',#{keyword},'%')
        <if test="categoryId != null">
            and category_id = #{categoryId}
        </if>
        <if test="tags != null">
            and tags = #{tags}
        </if>
        group by tags
    </select>


</mapper>